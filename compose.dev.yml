services:
  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    environment:
      - DB_VENDOR
      - DB_ADDR
      - DB_DATABASE
      - DB_USER
      - DB_PASSWORD
      - KEYCLOAK_USER
      - KEYCLOAK_PASSWORD
      - KEYCLOAK_LOGLEVEL
      - ROOT_LOGLEVEL
      - KC_PROXY
      - PROXY_ADDRESS_FORWARDING
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      goalification:
        ipv4_address: 192.168.0.2
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    ports:
      - 5432:5432
    healthcheck:
      test: [ 'CMD-SHELL', 'psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1' ]
    networks:
      goalification:
        ipv4_address: 192.168.0.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
  angular:
    build:
      context: ./
      dockerfile: ./docker/dev/Dockerfile.dev.angular
      args:
        project: ui
    ports:
      - 80:80
    hostname: goalification.click
    domainname: goalification.click
    restart: on-failure
    networks:
      goalification:
        ipv4_address: 192.168.0.4
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - angular_vol:/usr/src/ui/
      - node_modules:/usr/src/ui/node_modules/
  nest:
    build:
      context: ./
      dockerfile: ./docker/dev/Dockerfile.dev.nest
      args:
        project: api
    ports:
      - 3333:3333
    restart: on-failure
    command: yarn start api
    environment:
      - DB_HOST
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - DB_PORT
      - KEYCLOAK_AUTH_URL
      - KEYCLOAK_REALM
      - KEYCLOAK_CLIENT_ID
      - KEYCLOAK_CLIENT_SECRET
    depends_on:
      - postgres
    networks:
      goalification:
        ipv4_address: 192.168.0.5
    volumes:
      - ./:/usr/src/api/
      - node_modules:/usr/src/api/node_modules/
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - nest
    ports:
      - 9090:9090
    networks:
      goalification:
        ipv4_address: 192.168.0.6
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_DATABASE_TYPE
      - GF_DATABASE_HOST
      - GF_DATABASE_NAME
      - GF_DATABASE_USER
      - GF_DATABASE_PASSWORD
      - GF_DATABASE_SSL_MODE
    ports:
      - 3000:3000
    networks:
      goalification:
        ipv4_address: 192.168.0.7
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  angular_vol:
  nest_vol:
  node_modules:
  postgres_data:
  grafana-storage:
networks:
  goalification:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/16
          gateway: 192.168.0.1
