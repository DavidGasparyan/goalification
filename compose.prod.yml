services:
  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres321
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin123
      KEYCLOAK_LOGLEVEL: DEBUG
      ROOT_LOGLEVEL: DEBUG
      KC_PROXY: "edge"
      PROXY_ADDRESS_FORWARDING: 'true'
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      goalification:
        ipv4_address: 192.168.0.2
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres321
    healthcheck:
      test: [ 'CMD-SHELL', 'psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1' ]
    networks:
      goalification:
        ipv4_address: 192.168.0.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
  angular:
    build:
      context: ./
      dockerfile: ./docker/prod/Dockerfile.prod.angular
      args:
        project: ui
    ports:
      - 80:80
    depends_on:
      - nest
      - keycloak
    hostname: goalification.click
    domainname: goalification.click
    restart: on-failure
    networks:
      goalification:
        ipv4_address: 192.168.0.4
    volumes:
      - ./nginx/prod/nginx.conf:/etc/nginx/nginx.conf
      - angular_vol:/usr/src/ui/
      - node_modules:/usr/src/ui/node_modules/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
  nest:
    build:
      context: ./
      dockerfile: ./docker/prod/Dockerfile.prod.nest
      args:
        project: api
    restart: on-failure
    environment:
      DB_HOST: postgres
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres321
      DB_PORT: 5432
      KEYCLOAK_AUTH_URL: 'http://goalification.click/auth'
      KEYCLOAK_REALM: goalification
      KEYCLOAK_CLIENT_ID: nest-app
      KEYCLOAK_CLIENT_SECRET: xcrB5tLqWTSwbbhQa8f3g11WvyVESXlw
    depends_on:
      - postgres
    volumes:
      - nest_vol:/usr/src/api/
      - node_modules:/usr/src/api/node_modules/
    networks:
      goalification:
        ipv4_address: 192.168.0.5
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - nest
    ports:
      - 9090:9090
    networks:
      goalification:
        ipv4_address: 192.168.0.6
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    links:
      - prometheus:prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=12345
    ports:
      - 3000:3000
    networks:
      goalification:
        ipv4_address: 192.168.0.7
    volumes:
      - ./data/grafana:/var/lib/grafana
  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      - angular
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --reinstall --webroot -w /var/www/certbot --force-renewal --email davidgasparyang@gmail.com -d goalification.click --agree-tos

volumes:
  angular_vol:
  nest_vol:
  node_modules:
  postgres_data:

networks:
  goalification:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/16
          gateway: 192.168.0.1

